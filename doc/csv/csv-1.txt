==================
ファイルを読み込む
==================

カンマ区切りのCSVファイルを読み込んで、データを処理してみます。
対象データとして、 `日経の指数公式サイト`_ (indexes.nikkei.co.jp) から日経平均プロフィルを利用します。

.. _`日経の指数公式サイト`: https://indexes.nikkei.co.jp/nkave/index?type=download

日経平均・関連指数の日経平均株価の日次データをCSVでダウンロード `nikkei_stock_average_daily_jp.csv` します。

以下のデータ (:file:`csv-1.csv`) は「データ日付,終値,始値,高値,安値」の並び順で、
2017年最初の日経平均株価です。

.. literalinclude:: /../etc/csv-1.csv

列番号と配列インデックス、その内容は以下の表のようにまとめられます。

.. list-table:: 日経平均株価の日足データ
   :widths: 10 10 20 20
   :header-rows: 1

   * - 列番号
     - 配列インデックス
     - 内容
     - データ型
   * - 1
     - 0
     - データ日付
     - 文字列/日付
   * - 2
     - 1
     - 終値
     - 小数
   * - 3
     - 2
     - 始値
     - 小数
   * - 4
     - 3
     - 高値
     - 小数
   * - 5
     - 4
     - 安値
     - 小数


自力で実装する方法
==================

Python の基本的な部分から学習するために、組み込みの機能だけで実装してみます。
``open()`` でファイルを開き、イテレータを使って CSV 形式 (カンマ区切りテキスト) のファイルを読み込みます。
``with`` を使うことでリソースリークなどを予防できます。
文字列から小数に変換するには ``float()`` を使い、小数点以下N桁で丸めるには ``round()`` を使います。

:doc:`/scripts/basic-scripting` で作成したスクリプトテンプレートから :file:`csv-1.py` を作ってみましょう。

.. literalinclude:: /../src/csv-1.py
   :encoding: utf-8
   :language: python

実行結果

.. code-block:: bash

    $ python3 src/csv-1.py etc/csv-1.csv
    2017/01/04	up   	295.48
    2017/01/05	down 	-81.41
    2017/01/06	up   	60.78
    2017/01/10	down 	-113.39
    2017/01/11	up   	6.03

このスクリプトでは、入力データに意図しないカンマが混入した場合に想定外の出力となります。
たとえば、フランスでは小数点の区切り文字がカンマなので、数値をうまく分割できないでしょう。
このスクリプトを改善しても構いませんが、次からは標準モジュール *csv* を使っていきましょう。

そもそも CSV とは何か？
=======================

インターネットにおけるデータ交換方式、という観点からは RFC で規定されています。

* :rfc:`4180` (Common Format and MIME Type for Comma-Separated Values (CSV) Files)

しかし、一般に広く普及している形式は Microsoft Excel が書き出す形式であり、
RFC 4180 と等価ではありません。
記号のエスケープルールや、暗黙的な型変換に違いがあります。

:`Comma-Separated Values`_ - ja.wikipedia.org:

    レコードにコンマやダブルクォートが含まれている場合、エスケープされている場合でも、ソフトによって解釈が異なり、区切り方が変わることがある。
    その結果、データが破壊されることや、修正の手間が生じることがある。
    レコードにタブ文字が含まれている場合よりも、レコードにコンマやダブルクォートが含まれている場合のほうが多い。
    従って、CSVの代わりに、タブ区切りテキスト形式（TSV）を使うことで問題を避けられることがある。

また、数値をダブルクォートで囲まない場合、小数点の記号と混同される地域もあります。
たとえば、Windows のパソコンでロケールをフランス語にして Excel を使うと、カンマが小数点の区切り文字になります。

:`小数点`_ - ja.wikipedia.org:

    また非英語圏の国においては、コンマ (,) が小数点として用いられ、ピリオド (.) が3桁ごとの位取りに用いられる。
    すなわち、日本と逆である。

.. _Comma-Separated Values: http://ja.wikipedia.org/wiki/Comma-Separated_Values
.. _小数点: http://ja.wikipedia.org/wiki/%E5%B0%8F%E6%95%B0%E7%82%B9

したがって、「CSV でデータをください」という話題が出た場合には注意しましょう。
一見簡単そうですが、細かい部分に違いがあります。
可能ならば JSON (:rfc:`4627`) のように構造化されてデータ型に制限のあるフォーマットを検討してください。
人間が読み書きするデータとコンピュータが読み書きするデータは、処理の難易度が必ずしも等価でないことに気をつけましょう。
